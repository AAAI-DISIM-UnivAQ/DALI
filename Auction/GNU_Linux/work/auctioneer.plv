 :-dynamic state/2. :-dynamic n_auction/1. :-dynamic winner/2. :-dynamic max_bid/1. ally(auctioneer). trusted(user). trusted(bob). trusted(jim). trusted(sue). state(0,0). n_auction(0). max_bid(0). winner(0,0). eve(start_auction):-n_auction(P),N is P+1,retract(n_auction(_)),assert(n_auction(N)),assert(state(0,N)),write('start new auction received'),nl,write('auction number: '),write(N),agent(Me),a(message(bob,send_message(new_auction(N),Me))),a(message(jim,send_message(new_auction(N),Me))),a(message(sue,send_message(new_auction(N),Me))). eve(place_bid(Value,Player,N)):-place(Value,Player,N),n_auction(N). place(Value,Player,N):-a(store_winner(Value,Player,N)). cd(store_winner(Value,Player,N)):-max_bid(Maxvalue),Value>Maxvalue,write(Player),write(' has bidded '),write(Value),write(' in auction '),write(N),nl,retract(max_bid(_)),retract(winner(_,_)),assert(max_bid(Value)),assert(winner(Player,N)). place(Value,Player,N):-write(Player),write(' has bidded '),write(Value),write(' in auction '),write(N),nl. communicate_winner(W,N):-evp(place_bid(X,P1,N)),evp(place_bid(Z,P2,N)),evp(place_bid(Q,P3,N)),P1\==P2,P2\==P3,P3\==P1,n_auction(N),winner(W,N),state(0,N),retract(state(_,N)),assert(state(1,N)). evi(communicate_winner(W,N)):-agent(Me),a(message(bob,send_message(announce_winner(W,N),Me))),a(message(jim,send_message(announce_winner(W,N),Me))),a(message(sue,send_message(announce_winner(W,N),Me))),retract(max_bid(_)),assert(max_bid(0)),nl,write('winner '),write(W),write(' announced to all'),nl. :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_405063,Ontology,_405067),_405057),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_405101)),a(message(Ag,propose(A,[_405101],AgI))),retractall(ext_agent(Ag,_405139,Ontology,_405143)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_404937,Ontology,_404941),_404931),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_405007,Ontology,_405011)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_404825,Ontology,_404829),_404819),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_404881,Ontology,_404885)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_404389),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_404423),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_404205). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_404053),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_404001),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_403877,_403879)),clause(agente(_403899,_403901,_403903,S),_403895),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_403671,_403673,_403675,S),_403667),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_403771,[]),repeat,read(_403771,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_403771). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-ally(From). told(From,send_message(M)):-trusted(From). told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(learned(_428977)):-cd(learned(_428977)),assert(do_action(learned(_428977),program)).
cd(learned(_428977)):-true.
a(message(_428985,confirm(learn(_428997),_428993))):-cd(message(_428985,confirm(learn(_428997),_428993))),assert(do_action(message(_428985,confirm(learn(_428997),_428993)),program)).
cd(message(_428985,confirm(learn(_428997),_428993))):-true.
a(message(bob,send_message(new_auction(_429017),_429013))):-cd(message(bob,send_message(new_auction(_429017),_429013))),assert(do_action(message(bob,send_message(new_auction(_429017),_429013)),program)).
cd(message(bob,send_message(new_auction(_429017),_429013))):-true.
a(message(bob,send_message(announce_winner(_429037,_429017),_429013))):-cd(message(bob,send_message(announce_winner(_429037,_429017),_429013))),assert(do_action(message(bob,send_message(announce_winner(_429037,_429017),_429013)),program)).
cd(message(bob,send_message(announce_winner(_429037,_429017),_429013))):-true.
a(message(jim,send_message(new_auction(_429017),_429013))):-cd(message(jim,send_message(new_auction(_429017),_429013))),assert(do_action(message(jim,send_message(new_auction(_429017),_429013)),program)).
cd(message(jim,send_message(new_auction(_429017),_429013))):-true.
a(message(jim,send_message(announce_winner(_429037,_429017),_429013))):-cd(message(jim,send_message(announce_winner(_429037,_429017),_429013))),assert(do_action(message(jim,send_message(announce_winner(_429037,_429017),_429013)),program)).
cd(message(jim,send_message(announce_winner(_429037,_429017),_429013))):-true.
a(message(sue,send_message(new_auction(_429017),_429013))):-cd(message(sue,send_message(new_auction(_429017),_429013))),assert(do_action(message(sue,send_message(new_auction(_429017),_429013)),program)).
cd(message(sue,send_message(new_auction(_429017),_429013))):-true.
a(message(sue,send_message(announce_winner(_429037,_429017),_429013))):-cd(message(sue,send_message(announce_winner(_429037,_429017),_429013))),assert(do_action(message(sue,send_message(announce_winner(_429037,_429017),_429013)),program)).
cd(message(sue,send_message(announce_winner(_429037,_429017),_429013))):-true.
a(message(_429131,reply(received(_429143),_429139))):-cd(message(_429131,reply(received(_429143),_429139))),assert(do_action(message(_429131,reply(received(_429143),_429139)),program)).
cd(message(_429131,reply(received(_429143),_429139))):-true.
a(message(_429131,accept_proposal(_429139,[],_429161))):-cd(message(_429131,accept_proposal(_429139,[],_429161))),assert(do_action(message(_429131,accept_proposal(_429139,[],_429161)),program)).
cd(message(_429131,accept_proposal(_429139,[],_429161))):-true.
a(message(_429131,failure(_429139,motivation(false_conditions),_429179))):-cd(message(_429131,failure(_429139,motivation(false_conditions),_429179))),assert(do_action(message(_429131,failure(_429139,motivation(false_conditions),_429179)),program)).
cd(message(_429131,failure(_429139,motivation(false_conditions),_429179))):-true.
a(message(_429131,inform(agree(_429143),values(no),_429139))):-cd(message(_429131,inform(agree(_429143),values(no),_429139))),assert(do_action(message(_429131,inform(agree(_429143),values(no),_429139)),program)).
cd(message(_429131,inform(agree(_429143),values(no),_429139))):-true.
a(message(_429131,inform(agree(_429143),values(yes),_429139))):-cd(message(_429131,inform(agree(_429143),values(yes),_429139))),assert(do_action(message(_429131,inform(agree(_429143),values(yes),_429139)),program)).
cd(message(_429131,inform(agree(_429143),values(yes),_429139))):-true.
a(message(_429131,inform(query_ref(_429143,_429017),motivation(no_values),_429139))):-cd(message(_429131,inform(query_ref(_429143,_429017),motivation(no_values),_429139))),assert(do_action(message(_429131,inform(query_ref(_429143,_429017),motivation(no_values),_429139)),program)).
cd(message(_429131,inform(query_ref(_429143,_429017),motivation(no_values),_429139))):-true.
a(message(_429131,inform(query_ref(_429143,_429017),values(_429291),_429139))):-cd(message(_429131,inform(query_ref(_429143,_429017),values(_429291),_429139))),assert(do_action(message(_429131,inform(query_ref(_429143,_429017),values(_429291),_429139)),program)).
cd(message(_429131,inform(query_ref(_429143,_429017),values(_429291),_429139))):-true.
a(message(_429131,propose(_429139,[_429311],_429161))):-cd(message(_429131,propose(_429139,[_429311],_429161))),assert(do_action(message(_429131,propose(_429139,[_429311],_429161)),program)).
cd(message(_429131,propose(_429139,[_429311],_429161))):-true.
a(message(_429131,refuse(agree(variable),motivation(refused_variables),_429139))):-cd(message(_429131,refuse(agree(variable),motivation(refused_variables),_429139))),assert(do_action(message(_429131,refuse(agree(variable),motivation(refused_variables),_429139)),program)).
cd(message(_429131,refuse(agree(variable),motivation(refused_variables),_429139))):-true.
a(message(_429131,refuse(query_ref(variable),motivation(refused_variables),_429139))):-cd(message(_429131,refuse(query_ref(variable),motivation(refused_variables),_429139))),assert(do_action(message(_429131,refuse(query_ref(variable),motivation(refused_variables),_429139)),program)).
cd(message(_429131,refuse(query_ref(variable),motivation(refused_variables),_429139))):-true.
a(message(_429131,reject_proposal(_429139,[],_429161))):-cd(message(_429131,reject_proposal(_429139,[],_429161))),assert(do_action(message(_429131,reject_proposal(_429139,[],_429161)),program)).
cd(message(_429131,reject_proposal(_429139,[],_429161))):-true.
a(message(_429391,inform(_429397,motivation(refused_message),_429179))):-cd(message(_429391,inform(_429397,motivation(refused_message),_429179))),assert(do_action(message(_429391,inform(_429397,motivation(refused_message),_429179)),program)).
cd(message(_429391,inform(_429397,motivation(refused_message),_429179))):-true.
a(message(_429413,send_message(sent_rmi(_429143,_429427,_429429),_429131))):-cd(message(_429413,send_message(sent_rmi(_429143,_429427,_429429),_429131))),assert(do_action(message(_429413,send_message(sent_rmi(_429143,_429427,_429429),_429131)),program)).
cd(message(_429413,send_message(sent_rmi(_429143,_429427,_429429),_429131))):-true.
a(store_winner(_429437,_429439,_429017)):-cd(store_winner(_429437,_429439,_429017)),assert(do_action(store_winner(_429437,_429439,_429017),program)).
eve_cond(start_auction):-cd(start_auction),eve(start_auction).
cd(start_auction):-true.
eve_cond(place_bid(_477577,_477579,_477581)):-cd(place_bid(_477577,_477579,_477581)),eve(place_bid(_477577,_477579,_477581)).
cd(place_bid(_477577,_477579,_477581)):-true.