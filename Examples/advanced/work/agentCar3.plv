 :-use_module(library(system)). :-dynamic mio_id/1. :-dynamic stato_attraversamento/2. :-write('Sono una macchinina!'). asserisci_ontologia(Semaforo,[],attraversamento):-retractall(stato_attraversamento(_,_)),assertz(stato_attraversamento('concesso',Semaforo)). eve(init(Id)):-assertz(mio_id(Id)). eve(arrivo_al_semaforo(Semaforo)):-assertz(stato_attraversamento('no')),format('Sono arrivato presso incrocio del semaforo ~w',Semaforo),nl,a(chiedo_di_attraversare(Semaforo)). a(chiedo_di_attraversare(Semaforo)):-mio_id(Id),write('Sto per chiedere al semaforo di attraversare'),nl,a(message(Semaforo,send_message(richiesta_attraversamento(Id),Me))). attraverso:-write(''). evi(attraverso):-stato_attraversamento(Y,Semaforo),'concesso'==Y,retractall(stato_attraversamento(_,Semaforo)),assertz(stato_attraversamento('incorso',Semaforo)),a(message(agentSemaphore1,accept_proposal(test,[],Me))),write('Il semaforo mi ha appena concesso ad attraversare incrocio, dunque lo attraverso'),nl,a(termino_attraversamento). a(termino_attraversamento):-mio_id(Id),stato_attraversamento(X,Semaforo),X=='incorso',retractall(stato_attraversamento(_,Semaforo)),assertz(stato_attraversamento('terminato',Semaforo)),write('Ho attraversato incrocio, dunque comunico al semaforo di aver terminato'),nl,a(message(Semaforo,send_message(termine_attraversamento(Id),Me))). :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_351841,Ontology,_351845),_351835),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_351879)),a(message(Ag,propose(A,[_351879],AgI))),retractall(ext_agent(Ag,_351917,Ontology,_351921)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_351715,Ontology,_351719),_351709),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_351785,Ontology,_351789)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_351603,Ontology,_351607),_351597),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_351659,Ontology,_351663)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_351167),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_351201),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_350983). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_350831),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_350779),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_350655,_350657)),clause(agente(_350677,_350679,_350681,S),_350673),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_350449,_350451,_350453,S),_350445),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_350549,[]),repeat,read(_350549,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_350549). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(termino_attraversamento):-cd(termino_attraversamento),assert(do_action(termino_attraversamento,program)).
cd(termino_attraversamento):-true.
a(chiedo_di_attraversare(_901619)):-cd(chiedo_di_attraversare(_901619)),assert(do_action(chiedo_di_attraversare(_901619),program)).
cd(chiedo_di_attraversare(_901619)):-true.
a(learned(_901627)):-cd(learned(_901627)),assert(do_action(learned(_901627),program)).
cd(learned(_901627)):-true.
a(message(_901635,confirm(learn(_901647),_901643))):-cd(message(_901635,confirm(learn(_901647),_901643))),assert(do_action(message(_901635,confirm(learn(_901647),_901643)),program)).
cd(message(_901635,confirm(learn(_901647),_901643))):-true.
a(message(agentSemaphore1,accept_proposal(test,[],_901665))):-cd(message(agentSemaphore1,accept_proposal(test,[],_901665))),assert(do_action(message(agentSemaphore1,accept_proposal(test,[],_901665)),program)).
cd(message(agentSemaphore1,accept_proposal(test,[],_901665))):-true.
a(message(_901673,reply(received(_901685),_901681))):-cd(message(_901673,reply(received(_901685),_901681))),assert(do_action(message(_901673,reply(received(_901685),_901681)),program)).
cd(message(_901673,reply(received(_901685),_901681))):-true.
a(message(_901673,accept_proposal(_901681,[],_901703))):-cd(message(_901673,accept_proposal(_901681,[],_901703))),assert(do_action(message(_901673,accept_proposal(_901681,[],_901703)),program)).
cd(message(_901673,accept_proposal(_901681,[],_901703))):-true.
a(message(_901673,failure(_901681,motivation(false_conditions),_901721))):-cd(message(_901673,failure(_901681,motivation(false_conditions),_901721))),assert(do_action(message(_901673,failure(_901681,motivation(false_conditions),_901721)),program)).
cd(message(_901673,failure(_901681,motivation(false_conditions),_901721))):-true.
a(message(_901673,inform(agree(_901685),values(no),_901681))):-cd(message(_901673,inform(agree(_901685),values(no),_901681))),assert(do_action(message(_901673,inform(agree(_901685),values(no),_901681)),program)).
cd(message(_901673,inform(agree(_901685),values(no),_901681))):-true.
a(message(_901673,inform(agree(_901685),values(yes),_901681))):-cd(message(_901673,inform(agree(_901685),values(yes),_901681))),assert(do_action(message(_901673,inform(agree(_901685),values(yes),_901681)),program)).
cd(message(_901673,inform(agree(_901685),values(yes),_901681))):-true.
a(message(_901673,inform(query_ref(_901685,_901801),motivation(no_values),_901681))):-cd(message(_901673,inform(query_ref(_901685,_901801),motivation(no_values),_901681))),assert(do_action(message(_901673,inform(query_ref(_901685,_901801),motivation(no_values),_901681)),program)).
cd(message(_901673,inform(query_ref(_901685,_901801),motivation(no_values),_901681))):-true.
a(message(_901673,inform(query_ref(_901685,_901801),values(_901833),_901681))):-cd(message(_901673,inform(query_ref(_901685,_901801),values(_901833),_901681))),assert(do_action(message(_901673,inform(query_ref(_901685,_901801),values(_901833),_901681)),program)).
cd(message(_901673,inform(query_ref(_901685,_901801),values(_901833),_901681))):-true.
a(message(_901673,propose(_901681,[_901853],_901703))):-cd(message(_901673,propose(_901681,[_901853],_901703))),assert(do_action(message(_901673,propose(_901681,[_901853],_901703)),program)).
cd(message(_901673,propose(_901681,[_901853],_901703))):-true.
a(message(_901673,refuse(agree(variable),motivation(refused_variables),_901681))):-cd(message(_901673,refuse(agree(variable),motivation(refused_variables),_901681))),assert(do_action(message(_901673,refuse(agree(variable),motivation(refused_variables),_901681)),program)).
cd(message(_901673,refuse(agree(variable),motivation(refused_variables),_901681))):-true.
a(message(_901673,refuse(query_ref(variable),motivation(refused_variables),_901681))):-cd(message(_901673,refuse(query_ref(variable),motivation(refused_variables),_901681))),assert(do_action(message(_901673,refuse(query_ref(variable),motivation(refused_variables),_901681)),program)).
cd(message(_901673,refuse(query_ref(variable),motivation(refused_variables),_901681))):-true.
a(message(_901673,reject_proposal(_901681,[],_901703))):-cd(message(_901673,reject_proposal(_901681,[],_901703))),assert(do_action(message(_901673,reject_proposal(_901681,[],_901703)),program)).
cd(message(_901673,reject_proposal(_901681,[],_901703))):-true.
a(message(_901933,inform(_901939,motivation(refused_message),_901721))):-cd(message(_901933,inform(_901939,motivation(refused_message),_901721))),assert(do_action(message(_901933,inform(_901939,motivation(refused_message),_901721)),program)).
cd(message(_901933,inform(_901939,motivation(refused_message),_901721))):-true.
a(message(_901955,send_message(sent_rmi(_901685,_901969,_901971),_901673))):-cd(message(_901955,send_message(sent_rmi(_901685,_901969,_901971),_901673))),assert(do_action(message(_901955,send_message(sent_rmi(_901685,_901969,_901971),_901673)),program)).
cd(message(_901955,send_message(sent_rmi(_901685,_901969,_901971),_901673))):-true.
a(message(_901619,send_message(richiesta_attraversamento(_901991),_901665))):-cd(message(_901619,send_message(richiesta_attraversamento(_901991),_901665))),assert(do_action(message(_901619,send_message(richiesta_attraversamento(_901991),_901665)),program)).
cd(message(_901619,send_message(richiesta_attraversamento(_901991),_901665))):-true.
a(message(_901619,send_message(termine_attraversamento(_901991),_901665))):-cd(message(_901619,send_message(termine_attraversamento(_901991),_901665))),assert(do_action(message(_901619,send_message(termine_attraversamento(_901991),_901665)),program)).
cd(message(_901619,send_message(termine_attraversamento(_901991),_901665))):-true.
eve_cond(arrivo_al_semaforo(_925525)):-cd(arrivo_al_semaforo(_925525)),eve(arrivo_al_semaforo(_925525)).
cd(arrivo_al_semaforo(_925525)):-true.
eve_cond(init(_925533)):-cd(init(_925533)),eve(init(_925533)).
cd(init(_925533)):-true.