 :-dynamic ill/2. :-dynamic trust/3. trust(gen_doc,0.8,gen_doctor). trust(friend_nurse,0.4,friend). trust(friend_clerk,0.5,friend). trust(lung_doc1,0.4,doctor). trust(lung_doc2,0.4,doctor). ill(cold,10). ill(bone_pain,10). ill(high_temperature,10). :-dynamic maxtrust/2. :-dynamic go_lung_doc/1. :-dynamic ability/2. :-dynamic controllo/1. :-dynamic opinion/3. :-dynamic guarito/1. controllo(1). modifiche_salute:-controllo(1). evi(modifiche_salute):-random(C),random(Rc),random(Rb),random(Rh),if(C>0.6,(NRc is Rc/3,NRb is Rb/3,NRh is Rh/3),(NRc is-(Rc)/3,NRb is-(Rb)/3,NRh is-(Rh)/3)),clause(ill(cold,X1),_),clause(ill(bone_pain,X2),_),clause(ill(high_temperature,X3),_),retractall(ill(_,_)),N1 is X1+NRc,N2 is X2+NRb,N3 is X3+NRh,assert(ill(cold,N1)),assert(ill(bone_pain,N2)),assert(ill(high_temperature,N3)),write('OLD COLD '),write(X1),nl,write('OLD BONE_PAIN '),write(X2),nl,write('OLD HIGH_TEMPERATURE '),write(X3),nl,write('NEW COLD '),write(N1),nl,write('NEW BONE_PAIN '),write(N2),nl,write('NEW HIGH_TEMPERATURE '),write(N3),nl,nl,assert(controllo(0)),go_reaction(modifiche_salute). sto_male:-controllo(0),evtp(Dali_tt1,modifiche_salute),clause(ill(cold,X),_),X>4. sto_male:-controllo(0),evtp(Dali_tt2,modifiche_salute),clause(ill(bone_pain,X),_),X>4. sto_male:-controllo(0),evtp(Dali_tt3,modifiche_salute),clause(ill(high_temperature,X),_),X>4. i_am_ill:-sto_male. evi(i_am_ill):-sleep(20),write('STO MALE, DEVO CONSULTARE UN DOTTORE PER FARMI DIRE COME AGIRE'),a(message(gen_doc,send_message(i_am_ill(patient),patient))),retractall(controllo(_)),go_reaction(i_am_ill). eve(gen_doc_propone):-a(prendere_antibiotico). eve(consult_lung_doc):-write('CONSULTO I MIEI AMICI PER SCEGLIERE DOTTORE POLMONARE'),nl,retractall(opinion(_,_,_)),findall(pp(X,Tr),trust(X,Tr,friend),L),last(L,U),arg(1,U,Ultimo),write('L ultimo Ã¨ '),write(Ultimo),nl,repeat,member(Me,L),arg(1,Me,Amico),arg(2,Me,Fiducia),write('Inviamo richiesta di info a '),write(Amico),nl,a(message(Amico,send_message(what_about_lung_doc(patient),patient))),Amico==Ultimo,!,clause(trust(lung_doc1,FD1,doctor),_),clause(trust(lung_doc2,FD2,doctor),_),retractall(maxtrust(_,_)),if(FD2>FD1,(assert(maxtrust(default,lung_doc2)),assert(opinion(default,lung_doc2,-999))),(assert(maxtrust(default,lung_doc1)),assert(opinion(default,lung_doc1,-999)))). eve(friend_opinion(Name,LD,X)):-assert(opinion(Name,LD,X)),write(Name),write(' mi dice di scegliere '),write(LD),write(' per il ricovero'),nl. choose_doctor:-evtp(Dali_tt4,consult_lung_doc),after_evp_time(consult_lung_doc,0,0,0,10),control_times(choose_doctor,[Dali_tt4]). evi(choose_doctor):-clause(trust(lung_doc1,FD1,doctor),_),clause(trust(lung_doc2,FD2,doctor),_),findall(yy(Name,LD,X),opinion(Name,LD,X),L),last(L,U),arg(1,U,Ultimo),repeat,member(Me,L),arg(1,Me,Amico),arg(2,Me,Dottore),arg(3,Me,Fiducia),if(Amico=default,(Fiducia is 1,Tr is 1),clause(trust(Amico,Tr,friend),_)),if(Dottore=lung_doc1,FT is Fiducia*FD1*Tr,FT is Fiducia*FD2*Tr),retractall(opinion(Amico,Dottore,_)),assert(opinion(Amico,Dottore,FT)),Amico==Ultimo,!,findall(yynew(Namenew,LDnew,Xnew),opinion(Namenew,LDnew,Xnew),Lnew),last(Lnew,Unew),arg(1,Unew,Ultimonew),repeat,member(Menew,Lnew),arg(1,Menew,Amiconew),arg(2,Menew,Dottorenew),arg(3,Menew,Fiducianew),clause(maxtrust(CurrentFriend,CurrentDoctor),_),clause(opinion(CurrentFriend,CurrentDoctor,HisTrust),_),if(Fiducianew>HisTrust,(retractall(maxtrust(_,_)),assert(maxtrust(Amiconew,Dottorenew))),true),Amiconew==Ultimonew,!,clause(maxtrust(ChosenFriend,ChosenDoctor),_),a(scegli_dottore(ChosenFriend,ChosenDoctor)),go_reaction(choose_doctor). go_to_lung_doctor(Lung_doc):-evtp(Dali_tt5,scegli_dottore(F,Lung_doc)),control_times(go_to_lung_doctor(Lung_doc),[Dali_tt5]). evi(go_to_lung_doctor(Lung_doc)):-clause(ill(cold,X1),_),clause(ill(bone_pain,X2),_),clause(ill(high_temperature,X3),_),random(R1),random(R2),random(R3),S1 is R1*X1,S2 is R2*X2,S3 is R3*X3,write('COLD AFTER LUNG DOCTOR VISIT '),write(S1),nl,write('BONE_PAIN AFTER LUNG DOCTOR VISIT '),write(S2),nl,write('HIGH_TEMPERATURE AFTER LUNG DOCTOR VISIT '),write(S3),nl,retractall(ill(_,_)),assert(ill(cold,S1)),assert(ill(bone_pain,S2)),assert(ill(high_temperature,S3)),a(go_doc(Lung_doc)),go_reaction(go_to_lung_doctor(Lung_doc)). valutazione_ricovero(Lung_doc):-evtp(Dali_tt6,go_doc(Lung_doc)),after_evp_time(go_doc(Lung_doc),0,0,0,10),control_times(valutazione_ricovero(Lung_doc),[Dali_tt6]). no_malato(HT,CC,BP):-if(HT>4,false,if(CC>4,false,if(BP>4,false,true))). evi(valutazione_ricovero(Lung_doc)):-clause(ill(high_temperature,HT),_),clause(ill(cold,CC),_),clause(ill(bone_pain,BP),_),clause(maxtrust(Friend,Lung_doctor),_),write('IL TEMPO NECESSARIO PER LA VALUTAZIONE E TRASCORSO.'),nl,if(no_malato(HT,CC,BP),(write('SONO GUARITO!'),nl,if(Friend=default,true,increment_trust_to(Friend,0.2,friend)),increment_trust_to(Lung_doctor,0.2,lung_doctor)),(write('NON SONO GUARITO!'),nl,if(Friend=default,true,decrement_trust_to(Friend,0.2,friend)),decrement_trust_to(Lung_doctor,0.2,lung_doctor))),assert(controllo(1)),go_reaction(valutazione_ricovero(Lung_doc)). increment_trust_to(Person,M,Type):-if(trust(Person,Tr,Type),retract(trust(Person,Tr,Type)),Tr is 0.4),Tn is Tr+M,assert(trust(Person,Tn,Type)),write('Congratulations to '),write(Type),write(' '),write(Person),write(', your trust of '),write(Tr),write(' will increase to '),write(Tn),nl. decrement_trust_to(Person,M,Type):-if(trust(Person,Tr,Type),retract(trust(Person,Tr,Type)),Tr is 0.4),Tn is Tr-M,assert(trust(Person,Tn,Type)),write('Sorry for '),write(Type),write(' '),write(Person),write(', your trust of '),write(Tr),write(' will decrease to '),write(Tn),nl. :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),datime(_274535),retractall(evtp_date(X,_274543)),assert(evtp_date(X,_274535)),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)),datime(_274380),retractall(evtp_date(inform(X,M,Ag),_274388)),assert(evtp_date(inform(X,M,Ag),_274380)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)),datime(_274298),retractall(evtp_date(inform(X,Ag),_274306)),assert(evtp_date(inform(X,Ag),_274298)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))),datime(_274226),retractall(evtp_date(X,_274234)),assert(evtp_date(X,_274226)). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_274115,Ontology,_274117),_274112),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_274134)),a(message(Ag,propose(A,[_274134],AgI))),retractall(ext_agent(Ag,_274153,Ontology,_274155)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_274052,Ontology,_274054),_274049),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_274087,Ontology,_274089)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_273996,Ontology,_273998),_273993),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_274024,Ontology,_274026)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)),datime(_273949),retractall(evtp_date(accepted_proposal(A,Mp,Ag),_273957)),assert(evtp_date(accepted_proposal(A,Mp,Ag),_273949)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)),datime(_273865),retractall(evtp_date(rejected_proposal(A,Mp,Ag),_273873)),assert(evtp_date(rejected_proposal(A,Mp,Ag),_273865)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)),datime(_273781),retractall(evtp_date(failed_action(A,M,Ag),_273789)),assert(evtp_date(failed_action(A,M,Ag),_273781)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_273691),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_273708),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_273599). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_273523),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_273497),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_273435,_273436)),clause(agente(_273446,_273447,_273448,S),_273444),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_273332,_273333,_273334,S),_273330),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_273382,[]),repeat,read(_273382,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_273382). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-trust(From,X,_),X>0.2. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-trust(To,X,_),X>0.2. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.		 						 			 			 				 				 				 				 				 				 				 				 				 				
a(prendere_antibiotico):-cd(prendere_antibiotico),assert(do_action(prendere_antibiotico,program)).
cd(prendere_antibiotico):-true.
a(go_doc(_168554)):-cd(go_doc(_168554)),assert(do_action(go_doc(_168554),program)).
cd(go_doc(_168554)):-true.
a(learned(_168558)):-cd(learned(_168558)),assert(do_action(learned(_168558),program)).
cd(learned(_168558)):-true.
a(message(_168562,confirm(learn(_168568),_168566))):-cd(message(_168562,confirm(learn(_168568),_168566))),assert(do_action(message(_168562,confirm(learn(_168568),_168566)),program)).
cd(message(_168562,confirm(learn(_168568),_168566))):-true.
a(message(gen_doc,send_message(i_am_ill(patient),patient))):-cd(message(gen_doc,send_message(i_am_ill(patient),patient))),assert(do_action(message(gen_doc,send_message(i_am_ill(patient),patient)),program)).
cd(message(gen_doc,send_message(i_am_ill(patient),patient))):-true.
a(message(_168582,reply(received(_168588),_168586))):-cd(message(_168582,reply(received(_168588),_168586))),assert(do_action(message(_168582,reply(received(_168588),_168586)),program)).
cd(message(_168582,reply(received(_168588),_168586))):-true.
a(message(_168582,accept_proposal(_168586,[],_168597))):-cd(message(_168582,accept_proposal(_168586,[],_168597))),assert(do_action(message(_168582,accept_proposal(_168586,[],_168597)),program)).
cd(message(_168582,accept_proposal(_168586,[],_168597))):-true.
a(message(_168582,failure(_168586,motivation(false_conditions),_168606))):-cd(message(_168582,failure(_168586,motivation(false_conditions),_168606))),assert(do_action(message(_168582,failure(_168586,motivation(false_conditions),_168606)),program)).
cd(message(_168582,failure(_168586,motivation(false_conditions),_168606))):-true.
a(message(_168582,inform(agree(_168588),values(no),_168586))):-cd(message(_168582,inform(agree(_168588),values(no),_168586))),assert(do_action(message(_168582,inform(agree(_168588),values(no),_168586)),program)).
cd(message(_168582,inform(agree(_168588),values(no),_168586))):-true.
a(message(_168582,inform(agree(_168588),values(yes),_168586))):-cd(message(_168582,inform(agree(_168588),values(yes),_168586))),assert(do_action(message(_168582,inform(agree(_168588),values(yes),_168586)),program)).
cd(message(_168582,inform(agree(_168588),values(yes),_168586))):-true.
a(message(_168582,inform(query_ref(_168588,_168646),motivation(no_values),_168586))):-cd(message(_168582,inform(query_ref(_168588,_168646),motivation(no_values),_168586))),assert(do_action(message(_168582,inform(query_ref(_168588,_168646),motivation(no_values),_168586)),program)).
cd(message(_168582,inform(query_ref(_168588,_168646),motivation(no_values),_168586))):-true.
a(message(_168582,inform(query_ref(_168588,_168646),values(_168662),_168586))):-cd(message(_168582,inform(query_ref(_168588,_168646),values(_168662),_168586))),assert(do_action(message(_168582,inform(query_ref(_168588,_168646),values(_168662),_168586)),program)).
cd(message(_168582,inform(query_ref(_168588,_168646),values(_168662),_168586))):-true.
a(message(_168582,propose(_168586,[_168672],_168597))):-cd(message(_168582,propose(_168586,[_168672],_168597))),assert(do_action(message(_168582,propose(_168586,[_168672],_168597)),program)).
cd(message(_168582,propose(_168586,[_168672],_168597))):-true.
a(message(_168582,refuse(agree(variable),motivation(refused_variables),_168586))):-cd(message(_168582,refuse(agree(variable),motivation(refused_variables),_168586))),assert(do_action(message(_168582,refuse(agree(variable),motivation(refused_variables),_168586)),program)).
cd(message(_168582,refuse(agree(variable),motivation(refused_variables),_168586))):-true.
a(message(_168582,refuse(query_ref(variable),motivation(refused_variables),_168586))):-cd(message(_168582,refuse(query_ref(variable),motivation(refused_variables),_168586))),assert(do_action(message(_168582,refuse(query_ref(variable),motivation(refused_variables),_168586)),program)).
cd(message(_168582,refuse(query_ref(variable),motivation(refused_variables),_168586))):-true.
a(message(_168582,reject_proposal(_168586,[],_168597))):-cd(message(_168582,reject_proposal(_168586,[],_168597))),assert(do_action(message(_168582,reject_proposal(_168586,[],_168597)),program)).
cd(message(_168582,reject_proposal(_168586,[],_168597))):-true.
a(message(_168712,inform(_168715,motivation(refused_message),_168606))):-cd(message(_168712,inform(_168715,motivation(refused_message),_168606))),assert(do_action(message(_168712,inform(_168715,motivation(refused_message),_168606)),program)).
cd(message(_168712,inform(_168715,motivation(refused_message),_168606))):-true.
a(message(_168723,send_message(what_about_lung_doc(patient),patient))):-cd(message(_168723,send_message(what_about_lung_doc(patient),patient))),assert(do_action(message(_168723,send_message(what_about_lung_doc(patient),patient)),program)).
cd(message(_168723,send_message(what_about_lung_doc(patient),patient))):-true.
a(message(_168733,send_message(sent_rmi(_168588,_168740,_168741),_168582))):-cd(message(_168733,send_message(sent_rmi(_168588,_168740,_168741),_168582))),assert(do_action(message(_168733,send_message(sent_rmi(_168588,_168740,_168741),_168582)),program)).
cd(message(_168733,send_message(sent_rmi(_168588,_168740,_168741),_168582))):-true.
a(scegli_dottore(_168745,_168746)):-cd(scegli_dottore(_168745,_168746)),assert(do_action(scegli_dottore(_168745,_168746),program)).
cd(scegli_dottore(_168745,_168746)):-true.
eve_cond(consult_lung_doc):-cd(consult_lung_doc),eve(consult_lung_doc).
cd(consult_lung_doc):-true.
eve_cond(gen_doc_propone):-cd(gen_doc_propone),eve(gen_doc_propone).
cd(gen_doc_propone):-true.
eve_cond(friend_opinion(_178651,_178652,_178653)):-cd(friend_opinion(_178651,_178652,_178653)),eve(friend_opinion(_178651,_178652,_178653)).
cd(friend_opinion(_178651,_178652,_178653)):-true.